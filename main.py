# -*- coding: utf-8 -*-
"""dashboard b3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1a0B-6j30LCSeo2Rx8FwnzUaEpK8clYo9
"""

import pandas as pd
import yfinance as yf
import streamlit as st
import matplotlib.pyplot as plt
from pandas.tseries.offsets import DateOffset

file_path = '/Users/gabrielarruda/PycharmProjects/dashboard_b3V/IBOVDia_08-01-24.csv'

tickers = pd.read_csv(file_path, encoding='ISO-8859-1', sep=';').Codigo
st.set_page_config(layout="wide")

tickers = tickers.index.astype(str)
tickers_sa = [ticker + '.SA' for ticker in tickers]

@st.cache_data
def getdata():
  df = yf.download(tickers_sa, start='2018-01-01')
  df = df['Close']
  return df

df = getdata()
df.index = pd.to_datetime(df.index)

st.title('Index Component performance of the B3 stocks')

n = st.number_input('Please provide the performance horizon in months:', min_value=1, max_value=60)

def get_ret(df, n):
  previous_prices = df[:df.index[-1] - DateOffset(months=n)].tail(1).squeeze()
  recent_prices = df.loc[df.index[-1]]
  ret_df = recent_prices / previous_prices - 1
  return previous_prices.name, ret_df

date, ret_df = get_ret(df,n)

winners, losers = ret_df.nlargest(10), ret_df.nsmallest(10)
winners.name, losers.name = 'winners', 'losers'

st.table(winners)
st.table(losers)


winnerpick = st.selectbox('Pick a winner to visualize:', winners.index)
plt.figure(figsize=(10,6))
plt.plot(df[winnerpick][date:], color='blue', linestyle='-', linewidth=2)
plt.title(f'Performance of {winnerpick}')
plt.xlabel('Date', fontsize=12)
plt.ylabel('Price', fontsize=12)
plt.xticks(rotation=45)
plt.tick_params(axis='both', which='major', labelsize=10)
st.pyplot(plt)


loserpick = st.selectbox('Pick a loser to visualize:', losers.index)
plt.figure(figsize=(10,6))
plt.plot(df[loserpick][date:], color='blue', linestyle='-', linewidth=2)
plt.title(f'Performance of {loserpick}')
plt.xlabel('Date', fontsize=12)
plt.ylabel('Price', fontsize=12)
plt.xticks(rotation=45)
plt.tick_params(axis='both', which='major', labelsize=10)
st.pyplot(plt)


